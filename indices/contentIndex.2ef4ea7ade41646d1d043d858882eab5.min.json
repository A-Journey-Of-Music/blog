{"/":{"title":"A Journey of Music","content":"\n#  A Journey of Music\nGreetings everyone,\n\nWe are thrilled to invite you to join us in our exciting journey towards the development of our games lecture project. Our team has been working tirelessly to bring you an interactive and engaging experience that will showcase the very best of game development.\n\nAs technology advances, the gaming industry continues to flourish, captivating audiences of all ages across the globe. With this in mind, we are eager to delve deeper into the world of game development and explore the intricacies of this ever-evolving field.\n\nWe are pleased to announce that our lecture will be taking place at [DHBW Karlsruhe](https://www.karlsruhe.dhbw.de/startseite.html), where we, as a team, will be discussing everything from the basics of game design to the latest trends in the industry. We are passionate about sharing our knowledge and expertise with you, providing valuable insights that will not only enhance your gaming experience, but also open doors to potential career opportunities.\n\nSo, whether you are a seasoned gamer or simply curious about the world of game development, join us for an informative and engaging session that will leave you feeling inspired and empowered.\n\nStay tuned for more updates and exciting news about our games lecture project. We look forward to seeing you there!\n\n## What is the Game about?\nGet ready to embark on a rhythmic adventure unlike any other! Our game project takes you on a journey through musical history, where you'll join a student on an epic quest after falling asleep.\n\nThe game functions like a typical platformer-game such as Super Mario or Rayman Legends, but with a musical twist. To succeed in each level, players must respond to the rhythm of the music. It's a unique concept that was highly inspired by the “Musical Levels” in Rayman Legends, but we've taken it to a whole new level.\n\nWith each level, you'll encounter new musical genres and iconic artists that shaped the world of music. From the swinging jazz of the 1920s to the electrifying rock of the 80s, you'll experience the beats and melodies that defined each era.\n\nThe graphics are stunning, with each level featuring its own distinct visual style that perfectly complements the music. The controls are intuitive and easy to pick up, but mastering the rhythm takes skill and practice.\n\nWe're confident that our game will provide hours of entertainment for both casual and hardcore gamers alike. So, get ready to put your rhythm skills to the test and join us on this epic musical journey. You can have a taste [here](https://www.youtube.com/watch?v=yT6XOfy2gEE).\n\n## Technology\n![](notes/images/monogame_logo.webp)\n\nWe want to use [Monogame](https://www.monogame.net/showcase/) as our Game Engine, as it is perfectly suitable for 2d games and has some well known titles like [Terraria](https://terraria.org/) or [Stardew Valley](https://www.stardewvalley.net/) amongst its users.\nWe want our game to be highly compatible with every mainstream pc operating system (Windows, macOS, Linux) and playable by controller.\n\n\u003e [!warning] Attention\n\u003e Whilst, originally, we chose [Monogame](https://www.monogame.net/showcase/) to be our Game Engine of choice, we have fully transitioned to [Godot](https://godotengine.org/) as of the 22. of April. Read more about it in this article: [Fuck Monogame - Our Transition to Godot](notes/Fuck%20Monogame.md)\n\n## Scope\nGet ready to witness the ultimate combination of music and technology! In our lecture project, we aim to create an unforgettable experience by developing 3 handcrafted levels - Classical, Rock'n Roll, and Hip Hop. But that's not all - we'll also be working on an algorithm that can analyze music and generate levels automatically.\n\nWe are passionate about exploring the intersection of music and technology. By handcrafting levels in three distinct genres, we'll showcase the artistry of game design while highlighting the unique characteristics of each music genre. But we won't stop there - we'll also be using cutting-edge algorithms to generate levels automatically, bringing a new level of excitement and challenge to the game.\n\nOur lecture project is the perfect opportunity to delve deeper into the world of music and technology. With each level, you'll discover new sounds and rhythms that will keep you hooked. And with the algorithm in place, the game will constantly evolve, providing a never-ending stream of fresh challenges.\n\nSo, whether you're a music enthusiast or a tech buff, our project has something for everyone. Join us as we explore the limitless possibilities of music and technology, and experience a game like no other.\n\n## Blog Entries\n- [First Blog entry!](notes/First%20Blog%20entry!.md)\n- [Plans No. 1](notes/Plans%20Number%201.md)\n- [Setting up MonoGame for development](notes/Setting%20up%20MonoGame%20for%20development.md)\n- [Creating a Project](notes/Creating%20a%20Project.md)\n- [Getting MGCB Editor to work on Linux](notes/Getting%20MGCB%20Editor%20to%20work%20on%20Linux.md)\n- [First Steps with MonoGame](notes/First%20Steps%20with%20MonoGame.md)\n- [The software you need!](notes/The%20software%20you%20need!.md)\n- [Tuning the Blog](notes/Tuning%20the%20Blog.md)\n- [Review No. 1](notes/Review%20Number%201.md)\n- [Plans No. 2](notes/Plans%20Number%202.md)\n- [Movement and Game Mechanics](notes/Movement%20and%20Game%20Mechanics.md)\n- [Sprite Animations](notes/Sprite%20Animations.md)\n- [Architecture](notes/Architecture.md)\n- [Review Number 2](notes/Review%20Number%202.md)\n- [Music choices for the POC](notes/Music%20choices%20for%20the%20POC.md)\n- [Graphical Process](notes/Graphical%20Process.md)\n- [Addictive Patterns](notes/Addictive%20Patterns.md)\n- [Manual Level Creation](notes/Manual%20Level%20Creation.md)\n- [Analytics](notes/Analytics.md)\n- [Fuck Monogame](notes/Fuck%20Monogame.md)\n- [Process - Map Design](notes/Process%20-%20Map%20Design.md)\n- [What still has to be done](notes/What%20still%20has%20to%20be%20done.md)\n- [Memes](notes/Memes.md)\n\nFor this project, we have to measure our time per week. You can find a central overview of our weekly work hours [here](notes/Times.md).","lastmodified":"2023-05-06T23:08:34.669639242Z","tags":null},"/notes/Addictive-Patterns":{"title":"Addictive Patterns","content":"To get users to continue playing your game isn't easy. That's, why there are so-called addictive patterns.\n\n## Addictive Patterns\nAddictive patterns in computer games can be important because they keep players engaged and coming back for more. Many game developers intentionally design their games to create addictive experiences, using techniques like reward schedules and variable reinforcement to encourage players to keep playing. While addiction to computer games can have negative consequences for some individuals, the majority of players are able to enjoy games in moderation without any significant problems. Furthermore, the development of games that provide healthy, rewarding experiences for players can be a valuable tool in promoting positive mental health and well-being. Ultimately, it is up to game developers and players alike to be mindful of the potential risks and benefits of addictive patterns in computer games.\n\n![](notes/images/Pasted%20image%2020230413101315.webp)\n\n## Addictive Patterns in Music Journey\nAs Music Journey is a 2d platformer game, with only single-player capabilities for the scope of the development at university, the most basic addictive pattern is succeeding in the different levels by jumping and crawling to the beat of the music.\nA little diagram shows, how our addictive patterns work:\n\n![](notes/images/Addictive%20Patterns.drawio.webp)\n\n\n","lastmodified":"2023-05-06T23:08:34.669639242Z","tags":null},"/notes/Analytics":{"title":"Analytics","content":"For “A Journey of Music” there are a lot of ways to measure player behaviour, game hardness and game popularity. That's, why we compiled a list of possible metrics we would like to use, to analyse our game.\n\n### Category 1: Game Popularity\n- **Retention rate**: This metric will help you understand how many players return to the game after playing it once. It is essential to analyse this metric since it is an indicator of whether the game is engaging enough to keep players coming back.\n- **Time spent in-game**: This metric will help you understand how long players are spending in your game. It is an excellent indicator of the game's addictiveness and engagement level. The more time players spend in the game, the better.\n- **Average session length**: This metric will help you understand how long players are playing the game in one sitting. It is essential to analyse this metric since it can indicate how engaging and addictive the game is.\n- **Social sharing**: This metric will help you understand how many players are sharing your game on social media platforms. It is an splendid indicator of how engaging and addictive the game is, and whether players are motivated to share it with their friends.\n- **Song popularity**: This metric measures which songs/maps are more popular among players. It can help you understand which songs are more engaging and appealing to your audience, and whether there are any patterns or trends to their preferences.\n\n#### How to present\n- A Bar Diagram of different colours to compare how the different metrics are at one moment\n\n![](notes/images/Graphs.drawio.webp)\n- A Graph in different colours for every metric to show how game popularity behaves over time\n\n### Category 2: Game Hardness\n- **Completion rate**: This metric will help you understand how many players complete the game. It is essential to analyse this metric since it is an indicator of how well the game is designed and balanced.\n- **Number of levels played**: This metric will help you understand how many levels players are completing. It is an magnificent indicator of how engaging your game is, and whether players are motivated to progress through the different levels.\n- **Song completion rate**: This metric measures how many players are completing each song/map. It can help you understand which maps are more popular and engaging for players and where players might be struggling.\n- **Death rate**: This metric measures how often players are dying in the game. It can help you understand whether the game is too difficult or too easy, and whether players are enjoying the game's difficulty level.\n- **Rage quit rate**: This metric will monitor if a player quits the game whilst in a level. If he has repeated the level for many times before and then rage quits and other players do the same, the level may be to hard.\n\n#### How to present\nSome of those metrics have to be seen per level:\n- Rage quit/Death Rate has to be represented per level in a different colour\n- Completion rate can be seen per level or for the whole game\nOthers have to be represented in a line-diagram, or as the arithmetic average for Number of levels played in comparison to all levels\n\n## Category 3: Player Skill Rating\n- **Beat accuracy**: This metric measures how accurately players are jumping to the rhythm of the beat. It can help you understand how well players are engaging with the music aspect of the game and whether they are finding it challenging or not.\n- **Song completion rate**: This metric measures how many players are completing each song/map. It can help you understand which maps are more popular and engaging for players and where players might be struggling.\n- **Score/points earned**: This metric measures the number of points/score earned by players in each level. It can help you understand which levels are more challenging for players and where they might need more help.\n\n#### How to present\nHere, a plot graph for different metrics could be made per player, and when in comparison with othe players, there could be another line graph showing the different metrics at specific levels of skill.\n\n![](notes/images/PlayerSkill.drawio.webp)\n\n","lastmodified":"2023-05-06T23:08:34.669639242Z","tags":null},"/notes/Architecture":{"title":"Architecture","content":"Game development is a complex and challenging process that requires careful planning and execution. One of the key aspects of game development is code architecture, which refers to the organization and structure of the code that powers the game. Code architecture plays a crucial role in determining the game's functionality, performance, and scalability, making it essential for developers to pay close attention to it.\n\nIn game development, inheritance is a fundamental concept that plays a critical role in code architecture. Inheritance enables developers to create new classes based on existing ones, thereby saving time and reducing the chances of errors. In the game engine MonoGame, inheritance is used extensively to create reusable code that can be easily extended and modified to suit specific game requirements.\n\nThis article will explore the importance of code architecture in game development and delve into the role that inheritance plays in [MonoGame](https://www.monogame.net/). We will discuss the benefits of using inheritance in game development, the challenges that developers face when working with inheritance, and some best practices for using inheritance effectively in MonoGame. By the end of this article, readers will have a better understanding of why code architecture and inheritance are critical factors in game development, and how they can use these concepts to create robust, scalable, and engaging games.\n\n## Architecture of the Game\n![](notes/images/overview.webp)\n\n## Sources, we use for our development:\n- [Structure of a MonoGame-Project](https://community.monogame.net/t/how-best-to-structure-a-monogame-porject/14437/6)\n- [GameDev-Quickie: Spritesheet-Animations](https://www.youtube.com/watch?v=hm4PkqS2bqY\u0026list=PLkEsuRhhI3ne0BcsCmwAZG-shlHyDfvKc\u0026index=15)\n- [GameDev-Quickie: Parallax Background](https://www.youtube.com/watch?v=DPyXfpd8sZo\u0026list=PLkEsuRhhI3ne0BcsCmwAZG-shlHyDfvKc\u0026index=17)\n","lastmodified":"2023-05-06T23:08:34.669639242Z","tags":null},"/notes/Blog-Setup":{"title":"Blog Setup","content":"This is a How-to Article for quickly setting up a blog with [Quartz](https://quartz.jzhao.xyz/) and [Obsidian.md](https://obsidian.md).\n\n# Prerequisites\n1. Obsidian installed on your local machine (because Quartz is Markdown-based)\n2. GitHub-Account\n3. Basic Knowledge of GitHub and Git.\n\nFirstly, visit [Quartz](https://quartz.jzhao.xyz/) and follow their Setup-Guide. Also follow their Obsidian-specific Tips.\n\n\u003e [!warning] Attention\n\u003e In Github, you have to set some parameters at the **Pages** tab in the settings Organiziation (or User-wide) and then Repository wide.\nAlways renember to Push into the `hugo`-Branch\n\nIf you have done that, do some configuration and try pushing some notes to it. \n\n\u003e [!attention]\n\u003e In Germany hosting your fonts with Google-Fonts isn't allowed by law and could be fined.\n\u003e You can just host your own fonts. For that I\n\u003e we would make a cross-reference to [Momolem's Blog](https://blog.vogel.business/Using-local-Google-Fonts-in-Hugo/) where he explains the changes you have to make, to make this work.\n\n\n\n","lastmodified":"2023-05-06T23:08:34.669639242Z","tags":null},"/notes/Creating-a-Project":{"title":"Creating a Project","content":"To create a MonoGame project, you have to navigate into your project folder and fill this template with the correct arguments:\n```zsh\ndotnet new \u003cTemplateID\u003e -o \u003cProjectName\u003e\n```\nFor Jan, the solution on Fedora being:\n```zsh\ndotnet new mgdesktopgl -o AJourneyOfMusic\n```\n\nTo read, how Jan got the MGCB Editor to run on Linux, read [here](notes/Getting%20MGCB%20Editor%20to%20work%20on%20Linux.md).","lastmodified":"2023-05-06T23:08:34.669639242Z","tags":null},"/notes/First-Blog-entry":{"title":"First Blog entry","content":"Hey there,\nFor our games lecture at DHBW Karlsruhe we have to run a blog, where we tell you about our findings and development of our game “A Journey of Music”.\n\nFirstly, Marvin and I want to thank [Quartz](https://quartz.jzhao.xyz/) for their template for this blog. \nWe want to use the Occasion to explain how we run it. \n\nMore Information you will find [here](notes/Blog%20Setup.md)!\n\nAs requested, we will also List our hours, on how long we worked on the Project. \nYou can find our times [here](notes/Times.md)!","lastmodified":"2023-05-06T23:08:34.669639242Z","tags":null},"/notes/First-Steps-with-MonoGame":{"title":"First Steps with MonoGame","content":"![](notes/images/Pasted%20image%2020230226174657.webp)\nWe can announce, that we have made first steps in MonoGame (literally!).\n\nWe can move the character up and down, left and right, by inputting the keyboard.\nWhat we haven't figured out yet, but are now closer to it, is how to animate the player:\nToday we took a look at [MonoGame.Extended](https://www.monogameextended.net/) only to find out, that it seems to be discontinued. We really don't know, so we tried [MonoGame.Aseprite](https://monogameaseprite.net/) as it is build for the support of Sprite Animations build by the [Aseprite Editor](https://www.aseprite.org/).\nWe successfully can now import `.ase` and `.aseprite` Files with the [MGCB-Editor](notes/Getting%20MGCB%20Editor%20to%20work%20on%20Linux.md).\nWe expect the first Animations to work tomorrow, after some fixing and reading the documentation :).\n\nFurthermore, we do also plan to explain the process of adding libraries to the MonoGame project.\n\nAdded: For the Tilemaps, we are still in search of a capable library, because MonoGame.Extended uses features deprecated in recent MonoGame versions. \nFor our Animations, we ended up, writing the code ourself. ","lastmodified":"2023-05-06T23:08:34.669639242Z","tags":null},"/notes/Fuck-Monogame":{"title":"Fuck Monogame - Our Transition to Godot 4","content":"We've made mistakes, we finally admit it!\nWhilst [Monogame](https://www.monogame.net/showcase/) was our original choice, the hiccups and discontinued libraries made it nearly impossible to got something going. Those 3 weeks we needed for importing `.tmx`-files were unnecessary and costed us a lot of time. \nThat's why we underwent an engine switch to [Godot 4](https://godotengine.org/).\nThis transition has multiple advantages over Monogame whilst adding to our original principles for our game-engine choosing.\nGodot is also\n- open-source\n- cross-os-compatible\n- huge variety of input devices\n\nbut has and is, in comparison to Monogame\n- a huge community\n- most functions are built-in\n- huge, high quality tutorials\n- fantastic documentation\n- leading edge.\n\n## Transitioning Process\n\nBecause, we haven't got that far, there was not a lot of progress lost. \nWe easily could reuse our [custom made assets](notes/Graphical%20Process.md) and could directly feel the intuitiveness of Godot, by easily creating and rendering a tile map.\nThe controls, animations, and physics of the player and the world were also quickly implemented and by the end of Saturday, the 22. Of April, we overtook our previous progress with an increased development speed.\n\n![](notes/images/godot_icon.webp)\n\n## Recent Screen capture\n\n[Link to our Youtube-Video](https://youtu.be/zui9eLelaBM)\n\n\n","lastmodified":"2023-05-06T23:08:34.669639242Z","tags":null},"/notes/Game-Frameworks":{"title":"Game Frameworks","content":"## Game Framework\n\nA game framework is a collection of reusable code libraries, modules, and tools that provide a foundation for building games. It provides a structure for organizing code, assets, and other resources, and typically includes functionality for handling graphics, input, sound, physics, networking, and other common game development tasks. A game framework allows developers to focus on the game logic and design, without having to worry about low-level details.\n\nExamples of popular game frameworks include:\n\n-   [Godot](https://godotengine.org/)\n-   [Phaser](https://phaser.io/)\n-   [MonoGame](https://www.monogame.net/)\n\n## Game Engine\n\nA game engine is a more comprehensive set of tools and technologies that provide a complete development environment for building games. In addition to the features found in a game framework, a game engine typically includes a visual editor, scripting tools, and support for creating complex game worlds and scenarios. Game engines are designed to be highly extensible, and often support plugins and third-party tools that allow developers to add custom functionality.\n\nExamples of popular game engines include:\n\n-   [Unity](https://unity.com/)\n-   [Unreal Engine](https://www.unrealengine.com)\n-   [CryEngine](https://www.cryengine.com/)\n\nIn summary, while both game frameworks and game engines provide a foundation for building games, game engines offer a more complete development environment, with additional tools and features for creating complex games.","lastmodified":"2023-05-06T23:08:34.669639242Z","tags":null},"/notes/Getting-MGCB-Editor-to-work-on-Linux":{"title":"Getting MGCB Editor to work on Linux","content":"To add media to your project, MonoGame uses a proprietary file format to map the media to game entities. \nTo edit the specified file, you need an editor, which runs in your project folder (!!!).\nIn your project folder, you have to run the following commands:\n```zsh\ndotnet mgcb-editor\n```\nIf it doesn't work the first time, don't worry, because you have to run the obvious command of\n```zsh\ndotnet tool restore\n```\n\nIf your output looks like this, you've succeeded!\n![](notes/images/Pasted%20image%2020230225171434.webp)\n\nNow you can easily open it with the command \n```zsh\nmgcb-editor\n```\nOr, in Jan's Case\n```zsh\nmgcb-editor-linux\n```\n\n![](notes/images/Pasted%20image%2020230225171754.webp)\n\nGreat Success!!!","lastmodified":"2023-05-06T23:08:34.669639242Z","tags":null},"/notes/Graphical-Process":{"title":"Process of graphical design","content":"Creating a 2D pixel character with LibreSprite can be a fun and rewarding experience. LibreSprite is a free, open-source software that provides a comprehensive set of tools to help you bring your characters to life. In this article, we will walk through the process of creating a 2D character using LibreSprite.\n\nTo begin, we will start with an example character that we have purchased. This character will be enlarged to 64 pixels and traced on a higher layer to create a rough outline. \n\n![](/notes/images/Pasted%20image%2020230412211220.webp)\n\nFrom there, we will use reference images of Mozart, a member of the band Kiss, and Kollegah to identify features to incorporate into our characters. By incorporating these features, we can create unique characters that are visually interesting and recognizable.\n\n![](/notes/images/Pasted%20image%2020230407111909.webp)\n\nTo build the characters, we will use different layers in LibreSprite. The head, weapon, torso, torso scribble layer, legs, transparent weapon layer, and transparent character layer will all be built on separate layers to ensure that each component can be edited and moved independently. The torso scribble layer is a useful tool for creating a rough sketch of the character's torso before committing to a final design.\n\nTo ensure consistency in our designs, we will create a base head and incorporate it into each character. This will give the characters a cohesive look and feel, and add charm to the graphic style. Additionally, each character will have a unique weapon that fits their personality. For example, Mozart will have a violin, Kiss will have an electric guitar, and Kollegah will have a microphone.\n\n![](/notes/images/mozart.webp)\n![](/notes/images/kiss.webp)\n![](/notes/images/kollegah%201.webp)\n\nThroughout the creation process, it is important to keep in mind the overall aesthetic of the characters. Using a consistent font and design elements will help to create a cohesive and visually pleasing final product.\n\nIn addition to creating the 2D pixel characters, LibreSprite also allows you to create animations for your characters. To create animations, we study all the movements of the base character and remodel our own character to create the same fluid motion.\n\n![](notes/images/Pasted%20image%2020230407110102.webp)\n\nThe head of the character remains the same size and height throughout the animation, which serves as a recognizable feature of the game. This creates a fun and recognizable detail for players to enjoy.\n\nTo begin creating animations, we will first create a new animation file and import our character layers. We will then create a new frame for each movement in the animation. For example, if we want our character to walk, we will create frames for each step of the walk cycle. We can then use the onion skinning feature in LibreSprite to see the previous and next frames as we create each new frame.\n\nTo ensure that our character moves smoothly, we need to pay close attention to the details of the animation. We must make sure that each frame is positioned correctly and that the movement of the character is natural and fluid. This may require adjusting the placement of the character's limbs or making other small tweaks to the animation.\n\n![](/notes/images/mozart_run.webp)\n\nCreating a 2D pixel character with LibreSprite can be a fun and rewarding experience. By starting with a base character and incorporating unique features and weapons, we can create visually interesting and recognizable characters. By using different layers and keeping the overall aesthetic in mind, we can create a cohesive and polished final product. With practice and experimentation, the possibilities are endless. :)\n","lastmodified":"2023-05-06T23:08:34.669639242Z","tags":null},"/notes/Impressum":{"title":"Impressum","content":"Angaben gem. § 5 TMG:\n\nJan Neumann\n\nIm Brühl 4\n\n65629 Niederneisen\n\nKontaktaufnahme:\n\nTelefon: + 49 15785853882\n\nE-Mail: [janneumannnneisen@gmail.com](mailto:janneumannnneisen@gmail.com)\n\n**Haftungsausschluss – Disclaimer:**\n\nHaftung für Inhalte\n\nAlle Inhalte unseres Internetauftritts wurden mit größter Sorgfalt und nach bestem Gewissen erstellt. Für die Richtigkeit, Vollständigkeit und Aktualität der Inhalte können wir jedoch keine Gewähr übernehmen. Als Diensteanbieter sind wir gemäß § 7 Abs.1 TMG für eigene Inhalte auf diesen Seiten nach den allgemeinen Gesetzen verantwortlich. Nach §§ 8 bis 10 TMG sind wir als Diensteanbieter jedoch nicht verpflichtet, übermittelte oder gespeicherte fremde Informationen zu überwachen oder nach Umständen zu forschen, die auf eine rechtswidrige Tätigkeit hinweisen. Verpflichtungen zur Entfernung oder Sperrung der Nutzung von Informationen nach den allgemeinen Gesetzen bleiben hiervon unberührt.\n\nEine diesbezügliche Haftung ist jedoch erst ab dem Zeitpunkt der Kenntniserlangung einer konkreten Rechtsverletzung möglich. Bei Bekanntwerden von den o.g. Rechtsverletzungen werden wir diese Inhalte unverzüglich entfernen.\n\nHaftungsbeschränkung für externe Links\n\nUnsere Webseite enthält Links auf externe Webseiten Dritter. Auf die Inhalte dieser direkt oder indirekt verlinkten Webseiten haben wir keinen Einfluss. Daher können wir für die „externen Links“ auch keine Gewähr auf Richtigkeit der Inhalte übernehmen. Für die Inhalte der externen Links sind die jeweilige Anbieter oder Betreiber (Urheber) der Seiten verantwortlich.\n\nDie externen Links wurden zum Zeitpunkt der Linksetzung auf eventuelle Rechtsverstöße überprüft und waren im Zeitpunkt der Linksetzung frei von rechtswidrigen Inhalten. Eine ständige inhaltliche Überprüfung der externen Links ist ohne konkrete Anhaltspunkte einer Rechtsverletzung nicht möglich. Bei direkten oder indirekten Verlinkungen auf die Webseiten Dritter, die außerhalb unseres Verantwortungsbereichs liegen, würde eine Haftungsverpflichtung ausschließlich in dem Fall nur bestehen, wenn wir von den Inhalten Kenntnis erlangen und es uns technisch möglich und zumutbar wäre, die Nutzung im Falle rechtswidriger Inhalte zu verhindern.\n\nDiese Haftungsausschlusserklärung gilt auch innerhalb des eigenen Internetauftrittes „_Name Ihrer Domain_“ gesetzten Links und Verweise von Fragestellern, Blogeinträgern, Gästen des Diskussionsforums. Für illegale, fehlerhafte oder unvollständige Inhalte und insbesondere für Schäden, die aus der Nutzung oder Nichtnutzung solcherart dargestellten Informationen entstehen, haftet allein der Diensteanbieter der Seite, auf welche verwiesen wurde, nicht derjenige, der über Links auf die jeweilige Veröffentlichung lediglich verweist.\n\nWerden uns Rechtsverletzungen bekannt, werden die externen Links durch uns unverzüglich entfernt.\n\nUrheberrecht\n\nDie auf unserer Webseite veröffentlichen Inhalte und Werke unterliegen dem deutschen Urheberrecht ([](http://www.gesetze-im-internet.de/bundesrecht/urhg/gesamt.pdf)[http://www.gesetze-im-internet.de/bundesrecht/urhg/gesamt.pdf](http://www.gesetze-im-internet.de/bundesrecht/urhg/gesamt.pdf)) . Die Vervielfältigung, Bearbeitung, Verbreitung und jede Art der Verwertung des geistigen Eigentums in ideeller und materieller Sicht des Urhebers außerhalb der Grenzen des Urheberrechtes bedürfen der vorherigen schriftlichen Zustimmung des jeweiligen Urhebers i.S.d. Urhebergesetzes ([](http://www.gesetze-im-internet.de/bundesrecht/urhg/gesamt.pdf)[http://www.gesetze-im-internet.de/bundesrecht/urhg/gesamt.pdf](http://www.gesetze-im-internet.de/bundesrecht/urhg/gesamt.pdf) ). Downloads und Kopien dieser Seite sind nur für den privaten und nicht kommerziellen Gebrauch erlaubt. Sind die Inhalte auf unserer Webseite nicht von uns erstellt wurden, sind die Urheberrechte Dritter zu beachten. Die Inhalte Dritter werden als solche kenntlich gemacht. Sollten Sie trotzdem auf eine Urheberrechtsverletzung aufmerksam werden, bitten wir um einen entsprechenden Hinweis. Bei Bekanntwerden von Rechtsverletzungen werden wir derartige Inhalte unverzüglich entfernen.\n\nDieses [Impressum](https://jurarat.de/muster-impressum) wurde freundlicherweise von [jurarat.de](https://jurarat.de/) zur Verfügung gestellt.","lastmodified":"2023-05-06T23:08:34.669639242Z","tags":null},"/notes/Manual-Level-Creation":{"title":"Manual Level Creation","content":"For the Proof-of-Concept Levels, the structure has to be created manually, fitted to the songs. As part of this article, we want to show you the different steps we took on creating the level to **Kiss - I was made for lovin' you** as this song was [chosen](notes/Music%20choices%20for%20the%20POC.md) by us.\n\n## 1. Step: Rhythm and BPM\nAs the first step, we gathered information about the song and wrote it down, as it becomes important later!\n\nFor example:\nKiss - I was made for lovin' you\nBPM: 128\nRhythm: 4/4\n\n## 2. Step: Listen to the Songs and make notes on the different song parts\nIn this part it is necessary to identify the different song parts and also count the frequencies of each part. For our example, it looks something like this:\n\n![](notes/images/Pasted%20image%2020230414012230.webp)\n\n## 3. Step: Slow down the song and follow the melody; Create structures based on that!\nIn the third step, we listened to the slowed down song and made notes on how the levels could look like. It can take multiple tries, but at some time you will get the hang of it. For us, it looks like this (please don't judge my handwriting).\n\n![](notes/images/Pasted%20image%2020230414012733.webp)\n\nThe horizontal bars, we drew across the lines, represent the height and length of a platform the player is supposed to jump on.\n\n## 4. Step: Summarize and Combine\nAfter we repeated step 3 for all song parts, we drew some of the parts out, and now had a perfect draft for final level creation.\n\n![](notes/images/Pasted%20image%2020230414012955.webp)\n\nWe also made notes on when to jump.\n\nAt last, you have to find the right player-speed and jump strength at each individual level, but this technique marks a good start on level creation.","lastmodified":"2023-05-06T23:08:34.669639242Z","tags":null},"/notes/Memes":{"title":"Our Memes","content":"![](notes/images/7kksh1.jpg)\n\n![](notes/images/7kksjo.jpg)\n\n![](notes/images/7kkspk.jpg)\n\n![](notes/images/7kksur.jpg)\n\n![](notes/images/7kkt6k.jpg)\n\n![](notes/images/7kktcg.jpg)\n\n![](notes/images/7kkukm.jpg)\n\n![](notes/images/7kkuqf.jpg)\n\n![](notes/images/7kkv1m.jpg)\n\nCredit, where Credit is due: Thanks to [imgflip.com](imgflip.com) for their meme creating tool.\n\n","lastmodified":"2023-05-06T23:08:34.669639242Z","tags":null},"/notes/Movement-and-Game-Mechanics":{"title":"Movement and Game Mechanics","content":"In the world of video games, game mechanics are the building blocks that make up a player's experience. They are the rules, systems, and interactions that define how a game works and how players engage with it. One of the key aspects of game mechanics is movement, which is essential for navigating the game world and interacting with its various elements. In the game “A Journey of Music”, game mechanics and movement are central to the player's experience. In this game, players embark on a musical adventure, exploring a vibrant and immersive world. This article will delve into the game mechanics and movement of “A Journey of Music”, exploring how they contribute to the game's unique and captivating gameplay.\n\n## Level\nIn “A Journey of Music”, players must keep their focus and timing in check as they navigate a fast-paced musical journey. The level begins with a countdown from 3 to 0, perfectly synced with the beat of the upcoming song. Once the countdown ends, the screen begins to move in time with the music, carrying players along with it as they dodge obstacles and collect points. The speed of the screen movement matches the tempo of the song, making it crucial for players to keep up with the beat to progress successfully. With the pressure on and the music pumping, players must stay alert and skilful to complete this challenging and exciting level.\nOne *optional feature* of enemies that chase players from behind in “A Journey of Music” is their synchronized appearance with the musical time of the level. As players progress through each level, the enemies that pursue them change in appearance, with their design and movement corresponding to the type of the music.\n\n## Death\nIn “A Journey of Music”, death is a crucial mechanic that adds an element of challenge and risk to the gameplay experience. To begin with, the game features level-specific death animations, which means that each level has its unique animation that plays when the player dies. This adds a touch of variety and creativity to the game, making the experience more engaging and immersive.\n\nHowever, death in “A Journey of Music” occurs only when the player moves beyond the boundaries of the screen. This means that players must stay focused and keep up with the rhythm of the music to avoid getting executed by leaving the screen's limits. This further adds to the challenge of the game, as players must not only dodge obstacles and enemies, but also maintain their pace and timing to avoid death.\n\nIf a player does die, they are given the chance to start over, with the game displaying the percentage of their lost run. This feature adds an element of motivation for players, encouraging them to keep trying and improving their performance with each run. Overall, the death mechanic in “A Journey of Music” creates an engaging and challenging gameplay experience, encouraging players to keep pushing their limits and perfect their skills.\n\n## Obstacles and Controls\n\n### Running\n\n![](notes/images/Running.webp)\n\nThe running mechanic in \"A Journey of Music\" is a fundamental aspect of the gameplay experience. To move the character to the right, players can either press the \"D\" key on their keyboard or the right arrow button. Alternatively, players can move the left thumb stick on their controller to the right, allowing for a more intuitive and responsive control scheme.\n\n### Jumping\n\n![](notes/images/SingleJump.webp)\n\nThe jumping mechanic in \"A Journey of Music\" allows players to navigate obstacles and enemies by leaping over them. To jump, players can either press the \"Space\" key on their keyboard or the \"A\" or \"X\" button on their controller, depending on their platform of choice. This mechanic requires careful timing and precision to master, adding an element of challenge and excitement to the gameplay experience.\n\n### Double Jump\n\n![](notes/images/DoubleJump.webp)\n\nDouble jumping is a powerful technique in \"A Journey of Music\" that allows players to reach higher platforms and avoid obstacles with ease. To perform a double jump, players need to first execute a regular jump by pressing the \"Space\" key on their keyboard or the \"A\" or \"X\" button on their controller. Just before the initial jump ends, the player can press the same button again to execute a second jump, propelling them even higher.\n\nTiming is crucial when performing a double jump, as pressing the button too early or too late can result in the player falling short or overshooting their target. With practice, however, players can use double jumping to navigate through levels quickly and efficiently, unlocking new paths and secrets along the way.\n\n### Sliding\n\n![](notes/images/Sliding.webp)\n\nSliding is a key mechanic in \"A Journey of Music\" that allows players to dodge obstacles and enemies by quickly sliding under them. To slide, players can press the \"Shift\" key on their keyboard or the \"Y\" and \"B\" buttons on their controller, depending on their platform of choice. This mechanic requires fast reflexes and careful timing, adding an exciting element of skill-based gameplay to the experience.\n\n### Jump + Hold\n\n![](notes/images/JumpHold.webp)\nThe \"Jump+Hold\" mechanic allows players to slide down ropes and descend to lower areas by holding onto them. To perform a Jump+Hold, players need to execute a regular jump by pressing the \"Space\" key on their keyboard or the \"A\" or \"X\" button on their controller. As the player approaches the rope, they need to press and hold the same button to grab onto it.\n\nOnce the player has grabbed onto the rope, they can continue holding the button to slide down the rope. Releasing the button will cause the player to let go of the rope and drop to the ground. This mechanic can be used to descend to lower platforms or avoid obstacles in the player's path.\n\nThe Jump+Hold mechanic requires careful timing and coordination, making it a fun and challenging addition to the game's mechanics. With practice, players can use this technique to navigate through levels quickly and efficiently, unlocking new paths and secrets along the way.\n\n## Menu\nThe menu structure in “A Journey of Music” is designed to be simple and intuitive, with a focus on providing players with quick access to the core gameplay experience. From the main menu, players are presented with two primary options: Play Game and Settings.\n\nIf the player chooses to play the game, they will be presented with a selection of levels to choose from. This selection could be presented as a list or as an interactive map, depending on the game's design. Each level may be unlocked sequentially or become accessible all at once, depending on the game's progression mechanics.\n\nOnce the player has selected a level, they will be taken to a loading screen that displays the name of the level and some relevant information, such as the musical genre or tempo. From here, the player can start the level and begin their musical journey.\n\nAlternatively, if the player selects Settings from the main menu, they will be taken to a submenu that offers a range of customizable options, such as graphics settings, audio settings, and control options. This allows the player to tailor the game's experience to their device specifications and personal preferences.\n\nOverall, the menu structure in “A Journey of Music” is designed to be streamlined and straightforward, allowing players to dive right into the gameplay or customize their experience quickly and easily.\n\n## Settings\nThe Settings menu in “A Journey of Music” offers players a range of options to customize their gameplay experience. One of the key features of the Settings menu is the ability to enable dynamic resolution, which adjusts the game's resolution to fit different screen sizes. This means that players with smaller screens can still enjoy a high-quality visual experience without compromising on performance, while those with larger screens can scale up the game's graphics for a more immersive experience.\n\nIn addition to dynamic resolution, the Settings menu also includes volume sliders for in-game sounds and music. This allows players to fine-tune the audio experience to their personal preferences, adjusting the volume of sound effects and music independently. For players who want to fully immerse themselves in the game's soundtrack, the music volume slider can be cranked up to maximum, while those who prefer a more subdued audio experience can adjust the settings accordingly.\n\nOverall, the Settings menu in “A Journey of Music” offers players a range of customizable options to optimize their gameplay experience, allowing them to tailor the game's visuals and audio to their preferences and device specifications.\n","lastmodified":"2023-05-06T23:08:34.669639242Z","tags":null},"/notes/Music-choices-for-the-POC":{"title":"Music choices for the POC","content":"Exciting news! We've made a decision on the soundtrack for our Proof of Concept. In keeping with our plan to create three levels set in different musical eras, we've carefully selected the following songs:\n\n1. Mozart-Level: Die Zauberflöte, K.620, Act 2: \"Der Hölle Rache kocht in meinem Herzen\"\n\t- We decided on this song, because, other than other classical music, it has a steady beat.\n\t- [Spotify-Link](https://open.spotify.com/track/2fMcjr9XcfqeWsHDrC1try?si=44e58057ae8f4bca)\n\t- [YouTube-Link](https://www.youtube.com/watch?v=YuBeBjqKSGQ)\n2. Rock-Level: \"I was made for lovin' you\" ~ Kiss\n\t- This song was chosen, because the Kiss-Characters can be visualized in a very cool way.\n\t- [Spotify-Link](https://open.spotify.com/track/761U61Joa2pOsb5aRd5elL?si=5a758cde045542ef)\n\t- [YouTube-Link](https://www.youtube.com/watch?v=ZhIsAZO5gl0)\n3. Hip/Hop/Gangster-Rap-Level: \"Showtime Fourever\" ~ Kollegah\n\t- This song was chosen, because of the cool atmosphere, which can be represented according to associated level\n\t- [Spotify-Link](https://open.spotify.com/track/348bH3kD6zRt48AbiNQuUx?si=628fd94f940844ac)\n\t- [YouTube-Link](https://www.youtube.com/watch?v=_etGw_lsNrI)\n\nThese songs perfectly capture the mood and atmosphere of each era and will help to immerse players in the game world. We can't wait for you to hear them!\n","lastmodified":"2023-05-06T23:08:34.669639242Z","tags":null},"/notes/Plans-Number-1":{"title":"Plans No. 1","content":"As it is only the start of the semester, we have more time than in three months from now, so we can put a lot of time into this.\nThat's why we came up with some objectives for the weekend and next week:\n\n## To-do's\n- Logo's and Design for the game and this blog\n- First steps in [MonoGame](https://www.monogame.net/)\n- Final Decision on whether we use MonoGame or [Godot](https://godotengine.org/)\n- Further Concept improvements that will be announced on the [main site](blog.newmanity.eu)\n- (maybe) [A first approach at platform mechanics and platform levels](notes/Movement%20and%20Game%20Mechanics.md)\n\nSee our [review](notes/Review%20Number%201.md) of this week's plans","lastmodified":"2023-05-06T23:08:34.669639242Z","tags":null},"/notes/Plans-Number-2":{"title":"Plans No. 2","content":"As we concluded [last week's](notes/Plans%20Number%201.md) plans in our [weekly review](notes/Review%20Number%201.md), we already thought of plans for this the week from 06.03 to 11.03.\n\n## To-do's\n- Further refactoring of the game's code\n- Implementation of physics and platform mechanics\n- [Improve Concept (originally planned last week)](notes/Movement%20and%20Game%20Mechanics.md)\n- Controller support\n- [Sprite Animations](notes/Sprite%20Animations.md)\n\n","lastmodified":"2023-05-06T23:08:34.669639242Z","tags":null},"/notes/Process-Map-Design":{"title":"Process of map design","content":"Libre Sprite Parallax Maps are a popular way to create dynamic and immersive game environments. In this process, pre-existing maps are modified and enhanced to add depth and detail to the scene. In this post, we will discuss two examples of how we used this technique to create unique and captivating game environments.\n\n![](notes/images/Pasted%20image%2020230504200047.webp)            \n\n![](notes/images/Pasted%20image%2020230504200412.webp)\n\nThe first map we modified was the Mozart map. We wanted to create an older, more historic feel to the modern buildings in the scene. To accomplish this, we redesigned the buildings to have an older aesthetic. We also cut out the background and added another layer to create additional depth. This helped create a more dynamic and interesting scene, adding depth and character to the environment.\n\n![](notes/images/Pasted%20image%2020230504195455.webp)\n\nThe second map we modified was the Kiss map. We wanted to create a warm, evening atmosphere in this scene, so we changed the colors to a yellow-orange hue. We also redesigned the foreground and adjusted the height of the buildings to create more depth. Additionally, we added a layer of clouds that move faster than the background clouds to create a more immersive environment. This layer also helped to create a red-orange atmosphere, further enhancing the evening feel of the scene.\n\n![](notes/images/Pasted%20image%2020230504193258.webp)\n\nUsing Libre Sprite Parallax Maps is an effective and efficient way to create unique game environments. By modifying existing maps and adding layers of detail and depth, we can create immersive and engaging worlds for players to explore. We hope that these examples inspire you to experiment with your own maps and create your own unique game environments using this technique.\n","lastmodified":"2023-05-06T23:08:34.669639242Z","tags":null},"/notes/Review-Number-1":{"title":"Review No. 1","content":"As we described our goals for the [last week](notes/Plans%20Number%201.md) last weekend, we wanted to review our ongoings and also updating you on our [plans for next week](notes/Plans%20Number%202.md)!\n\n## Designing a logo and design for the game and blog\n\n![](notes/images/Pasted%20image%2020230304171946.webp)\n\nThis is our freshly designed logo for the game and blog. It represents our approach to our simplicity and the musical theme of our game. We may improve this along the way, but for now it represents the identity of this project.\n\n## First steps in MonoGame\nWe also took a look on MonoGame and started implementing the game.\nBoth of us believe in learning by doing, so the game enhances nearly every time we touch it. \nIn our upcoming update, we will describe the process of refactoring the game in an object-oriented approach.\n\n## Final Decision on whether we use MonoGame or Godot\nWe finalized our decision to go with MonoGame, as it is the most fitting game engine, for our scope. We will tell you more about it in an upcoming blog entry, on why we didn't want to go with [Unity](https://unity.com) or [Unreal](https://www.unrealengine.com).\n\n## Enhancing of our Game Concept.\nThis goal was cut short this week, but we will do it in the upcoming week, we promise ;).\n\n## First Approach at platformer mechanics and levels\nWhile there are no seeable results to this one, we developed our game with multiple levels in kind. Read more about this one in our article about the object-oriented design of our game.\n\nYou can see our times, that we spend on the project on [this site](notes/Times.md).\n","lastmodified":"2023-05-06T23:08:34.669639242Z","tags":null},"/notes/Review-Number-2":{"title":"Review No. 2","content":"Greetings! It's been a while since our last update, but we've been hard at work on our game development project. While we're not quite ready to share a playable prototype just yet, we wanted to take this opportunity to share some of the challenges we've encountered and outline our remaining tasks.\n\nUnfortunately, we've run into some issues with MonoGame's libraries - many of them are now deprecated and no longer compatible with the latest versions of the [game framework](notes/Game%20Frameworks.md). This means that we've had to take on the task of implementing many features ourselves, leading to a steep learning curve. On the plus side, we'll come out of this project as MonoGame experts!\n\nMoving forward, here's what's on our roadmap:\n\n-   Importing and using tilemaps created with [Tiled](https://www.mapeditor.org/)\n-   Implementing physics ([concept](notes/Movement%20and%20Game%20Mechanics.md))\n-   Building an enemy system\n-   Scaling for more levels\n-   Improving our texturing and scaling workflows, including finding the ideal resolution and implementing runtime scaling\n-   Establishing CI/CD for building an executable\n-   Providing instructions for the music students involved in the project.\n\nThanks for sticking with us - we're excited to share our progress with you soon.","lastmodified":"2023-05-06T23:08:34.669639242Z","tags":null},"/notes/Setting-up-MonoGame-for-development":{"title":"Setting up Monogame for development","content":"Before any Game could be implemented, there is a setup for the development environment to do. Of course, you could just follow the [Setup-Guide](https://docs.monogame.net/articles/getting_started/0_getting_started.html) at MonoGame's website.\n\n# Setting up MonoGame for Linux\nJan's choice of an operating system consists of Fedora Workstation for his laptop and Windows for his desktop gaming pc. As development is mainly done on his laptop, he followed the [Linux-Guide](https://docs.monogame.net/articles/getting_started/1_setting_up_your_development_environment_ubuntu.html) for setting up MonoGame.\n\n## Install .Net 6 SDK\nAs MonoGame is based on Microsoft's Mono and XDA libraries you have to install [.Net 6 SDK](https://dotnet.microsoft.com/en-us/download/dotnet/6.0)\n## Install Visual Studio Code\nOf course you can get any Code-Editor to somehow work with MonoGame, but for Jan [Visual Studio Code](https://code.visualstudio.com/download) was the obvious choice, as it is tightly integrated with MonoGame.\nHere, you can also add plugins to support your development:\n1. C# extension \n```zsh\ncode --install-extension ms-dotnettools.csharp\n```\n2. MonoGame Content Builder \n```zsh\ncode --install-extension mgcb-vscode.mgcb-vscode\n```\n\n## Install MonoGame templates\nThere are additional templates and tools available you can install via CLI:\n```zsh\ndotnet new --install MonoGame.Templates.CSharp\n```\n\n\u003e [!info] Optional\n\u003e On Linux you can install Wine and a tool by MonoGame to better compile effects. Jan opted for not installing it yet\n\nTo read how Jan set up our game, read [here](notes/Creating%20a%20Project.md).\n","lastmodified":"2023-05-06T23:08:34.669639242Z","tags":null},"/notes/Sprite-Animations":{"title":"Sprite Animations","content":"After a pause from blogging, we can announce, that we managed to have run our first sprite animations.\nAs [MonoGame](https://monogame.net) is only a [game framework](notes/Game%20Frameworks.md) and not a complete game engine, it means for us, that we had to do much from the ground up, on ourselves.\n\n## What did we do?\n\nBesides other university projects (there's much to do) we had some time to further work on our game and with some tutorials from YouTube, with the one of [GameDev Quickie](https://www.youtube.com/watch?v=hm4PkqS2bqY\u0026list=PLkEsuRhhI3ne0BcsCmwAZG-shlHyDfvKc\u0026index=15) being the most helpful one and we managed to implement the code and execute it succesfully.\nNow with the spritesheet animation classes established, we can work on physics and levels.\n\n## Showcase?\n[Link to Youtube-Video](https://www.youtube.com/watch?v=8Q_pfNpS3Tk)\n\n## Further Developments in this context:\n- [Graphical Process](notes/Graphical%20Process.md)\n","lastmodified":"2023-05-06T23:08:34.669639242Z","tags":null},"/notes/The-software-you-need":{"title":"The software you need!","content":"As we went with [Monogame](https://www.monogame.net/) as our Game Engine, we need a lot of external tools around it, as Monogame itself only comes with the [MGCB-Editor](notes/Getting%20MGCB%20Editor%20to%20work%20on%20Linux.md) as an image preprocessor.\n\nTo create graphics for our game, such as characters and levels, we searched for tools helping us create those.\n\n![](notes/images/Pasted%20image%2020230228184657.webp)\n\nFor our character design and animation, we went with [Aseprite](https://www.aseprite.org/) as our Sprite-Editor, because it is fairly cheap (20 euros) and relatively straightforward. At the moment, we are running into compatibility issues on Linux, but we are looking forward to sorting those out by next week.\n\n![](notes/images/Pasted%20image%2020230228184631.webp)\nFor our level-design, we aim to use `Tilemaps` as a construct for our levels. To design those, we want to use the [Tiled-Editor](https://www.mapeditor.org/), as it is available for all main platforms and widely used as well.","lastmodified":"2023-05-06T23:08:34.669639242Z","tags":null},"/notes/Times":{"title":"Times","content":"\n| Week               | Jan (in hours) | Marvin (in hours) |\n| ------------------ | -------------- | ----------------- |\n| 1. (20.02-26.02)   | 9              | 7                 |\n| 2. (27.02-05.03)   | 7              | 5                 |\n| 3. (06.03-11.03)   | 7              | 5                 |\n| 4. (13.03-18.03)   | 7              | 6                 |\n| 5. (20.03-25.03)   | 5              | 7                 |\n| 6. (27.03-01.04)   | 5              | 5                 |\n| 7. (03.04-08.04)   | 5              | 5                 |\n| 8.  (10.04-15.04)  | 6              | 7                 |\n| 9.   (17.04-22.04) | 9              | 5                 |\n| 10.  (24.04-29.04) | 8              | 6                 |\n| 11.                |                |                   |\n\n\n","lastmodified":"2023-05-06T23:08:34.673639218Z","tags":null},"/notes/Tuning-the-Blog":{"title":"Tuning the Blog","content":"While the development of the game is underway, we want to share our newest developments to this blog. \nAs you know, this blog is based on [Quartz](https://quartz.jzhao.xyz/), which is based on [Hugo](https://gohugo.io/).\nHugo is one of the fastest frameworks for static sites, and our site was scoring **93** out of a **100** on the [Google Lighthouse](https://developer.chrome.com/docs/lighthouse/overview/) performance rating.\nOne diagnostic point Lighthouse had mentioned was, that pictures were shipped in many formats (.svg, .webp, .jpeg) instead of using the optimized **.webp** format.\n\nAs we delivered our blog through a [Github Actions-Pipeline](https://github.com/features/actions), we thought of an additional step, to automatically convert all images in the `images`-folder, to be converted into .webp\nWe implemented the following step:\n```yaml\nconvert_images:\n\truns-on: ubuntu-20.04\n\tsteps:\n\t- name: Checkout repository\n\t\tuses: actions/checkout@v2\n\t\twith:\n\t\tref: \"hugo\"\n\t- name: Save original Markdown files\n\t\tuses: actions/upload-artifact@v2\n\t\twith:\n\t\t\tname: original-markdown-files\n\t\t\tpath: content/\n\t\t\tif-no-files-found: error\n\t- name: Install ImageMagick\n\t\trun: sudo apt-get install -y imagemagick\n\t- name: Convert png to WebP\n\t\tcontinue-on-error: true\n\t\trun: |\n\t\tif ls content/notes/images/*.webp 1\u003e /dev/null 2\u003e\u00261; then\n\t\tfor file in content/notes/images/*.webp; do\n\t\tconvert \"$file\" \"${file%.*}.webp\"\n\t\trm \"$file\"\n\t\tfind content -path content/notes/.obsidian -prune -o -name '*.md' -type f -print0 | xargs -0 sed -i 's/\\.\\(png\\)/.webp/g'\n\t\tdone\n\t\tfi\n\t- name: Convert jpg to WebP\n\t\tcontinue-on-error: true\n\t\trun: |\n\t\tif ls content/notes/images/*.jpg 1\u003e /dev/null 2\u003e\u00261; then\n\t\tfor file in content/notes/images/*.jpg; do\n\t\tconvert \"$file\" \"${file%.*}.webp\"\n\t\trm \"$file\"\n\t\tfind content -path content/notes/.obsidian -prune -o -name '*.md' -type f -print0 | xargs -0 sed -i 's/\\.\\(jpg\\)/.webp/g'\n\t\tdone\n\t\tfi\n\t- name: Convert jpeg to WebP\n\t\tcontinue-on-error: true\n\t\trun: |\n\t\tif ls content/notes/images/*.jpeg 1\u003e /dev/null 2\u003e\u00261; then\n\t\tfor file in content/notes/images/*.jpeg; do\n\t\tconvert \"$file\" \"${file%.*}.webp\"\n\t\trm \"$file\"\n\t\tfind content -path content/notes/.obsidian -prune -o -name '*.md' -type f -print0 | xargs -0 sed -i 's/\\.\\(jpeg\\)/.webp/g'\n\t\tdone\n\t\tfi\n\t- name: Convert svg to WebP\n\t\tcontinue-on-error: true\n\t\trun: |\n\t\tif ls content/notes/images/*.svg 1\u003e /dev/null 2\u003e\u00261; then\n\t\tfor file in content/notes/images/*.svg; do\n\t\tconvert \"$file\" \"${file%.*}.webp\"\n\t\trm \"$file\"\n\t\tfind content -path content/notes/.obsidian -prune -o -name '*.md' -type f -print0 | xargs -0 sed -i 's/\\.\\(svg\\)/.webp/g'\n\t\tdone\n\t\tfi\n\t- name: Commit changes\n\t\tuses: stefanzweifel/git-auto-commit-action@v4.16.0\n\t\twith:\n\t\t\tcommit_message: \"Convert images to WebP format\"\n\t- name: Save converted Markdown files\n\t\tuses: actions/upload-artifact@v2\n\t\twith:\n\t\t\tname: converted-markdown-files\n\t\t\tpath: content/notes/\n\t\t\tif-no-files-found: ignore\n```\n\n[Full Source](https://github.com/A-Journey-Of-Music/blog/blob/hugo/.github/workflows/deploy.yaml)\n\nNow, all images, we use, are converted into **.webp** and the references in the markdown files are automatically changed as well.\n\nNow we reach the following Lighthouse Score:\n\n![](notes/images/Pasted%20image%2020230301201645.webp)\n","lastmodified":"2023-05-06T23:08:34.673639218Z","tags":null},"/notes/What-still-has-to-be-done":{"title":"What still has to be done","content":"At last, we want to provide a list, with features, which we haven't finished or even started yet, but would definitely add to the look an feel of our game.\n\n## Game overall\n- More detailled worlds, especially on the tilemap side\n- Double Jumps and Slides, Jump and Hold -\u003e [Movement and Game Mechanics](notes/Movement%20and%20Game%20Mechanics.md)\n- Algorithm for automated map making\n\t- automated map generation in godot\n\t- algorithm for analysing rythm and melodic patterns in music\n- Documentation -\u003e We still want to do that for our follow ups\n- Character Selection\n\n## Technical Side\n- Real analytics, GameAnalytics.com is an option, but its a hassle to work with / seems not legit\n\t- Left only implemented in savegames\n- Settings-Menu\n- More Best Practices in Godot -\u003e Will be done by us, when we have some freetime\n- Dynamic Resolutions\n- More Clean Code Practices\n\n## Applications welcome!\n*You* are a student, who is willing to work with our outcomes and further improve the game? \n*You* have Ideas, to improve our game?\n*You* want to execute our game and need help with that?\n\nWrite us an e-mail: [ajourneyofmusic+blog@newmanity.eu](mailto:ajouneyofmusic+blog@newmanity.eu)\n","lastmodified":"2023-05-06T23:08:34.673639218Z","tags":null}}